package com.yahoo.util;

public class MedianofTwoSortedArrays {
	public static void main(String args[]) {
		int A[] = {2, 4, 6};
		int B[] = {1, 3, 4, 5, 6};
		//int A[] = {5,6,10,42,84,92,129,194,339,413,439,479,492,536,554,597,687,734,814,837,914,934,948,980,990,1002,1039,1103,1107,1169,1189,1216,1242,1317,1326,1381,1391,1414,1435,1501,1512,1527,1534,1582,1665,1695,1718,1739,1816,1817,1868,1929,1939,2005,2058,2080,2162,2174,2187,2276,2288,2326,2444,2499,2537,2537,2544,2550,2591,2631,2649,2670,2697,2713,2724,2764,2779,2809,2823,2857,2898,2902,2907,2946,2958,2976,3024,3051,3080,3089,3113,3150,3182,3208,3226,3232,3253,3268,3298,3353,3457,3458,3505,3523,3578,3602,3648,3657,3875,3891,4056,4069,4074,4075,4091,4158,4186,4206,4219,4224,4225,4283,4290,4399,4439,4461,4462,4464,4514,4533,4534,4541,4607,4677,4682,4777,4797,4825,4857,4931,4964,4994,5004,5004,5045,5069,5112,5120,5123,5160,5184,5198,5208,5228,5266,5301,5352,5368,5419,5440,5497,5516,5533,5542,5568,5593,5650,5657,5659,5668,5686,5723,5743,5749,5774,5786,5802,5975,6004,6008,6013,6035,6044,6071,6074,6077,6108,6183,6187,6209,6210,6221,6241,6271,6319,6320,6366,6439,6471,6497,6542,6544,6554,6557,6576,6605,6607,6616,6674,6699,6741,6751,6821,6822,6827,6836,6851,6872,6896,6975,7001,7088,7109,7169,7183,7204,7211,7232,7239,7312,7313,7364,7373,7390,7430,7474,7481,7558,7559,7564,7679,7698,7713,7767,7851,7854,7874,7886,7929,7941,7946,7979,8015,8061,8092,8102,8162,8165,8210,8232,8270,8306,8330,8394,8420,8464,8577,8597,8702,8719,8728,8737,8740,8781,8825,8847,8880,8940,8998,9026,9063,9106,9109,9111,9168,9238,9265,9297,9311,9311,9338,9481,9489,9499,9528,9592,9698,9718,9783,9820,9841,9902,9908,9940,9956,9987,10000,10009,10086,10121,10160,10262,10317,10341,10356,10397,10491,10573,10595,10598,10675,10676,10677,10731,10790,10794,10826,10847,10854,10873,10907,10949,11007,11041,11105,11147,11187,11196,11202,11212,11256,11285,11287,11314,11326,11348,11377,11385,11399,11429,11487,11531,11572,11590,11593,11675,11752,11799,11805,11809,11835,11880,11887,11889,11901,11965,12004,12019,12100,12113,12119,12142,12161,12219,12317,12368,12411,12522,12566,12588,12620,12646,12679,12692,12693,12726,12732,12751,12883,12903,13006,13029,13065,13098,13190,13231,13278,13312,13373,13443,13469,13525,13599,13643,13654,13669,13709,13820,13876,13934,13972,14014,14016,14027,14098,14112,14121,14126,14146,14167,14207,14216,14251,14259,14331,14409,14439,14450,14454,14554,14575,14593,14702,14741,14763,14787,14821,14901,14904,14931,14956,14960,14961,14979,14995,14998,15043,15045,15066,15115,15128,15137,15153,15153,15157,15194,15227,15237,15244,15264,15276,15282,15333,15434,15463,15470,15471,15514,15518,15555,15619,15625,15651,15661,15742,15753,15754,15764,15775,15786,15818,15940,16074,16081,16082,16093,16110,16176,16182,16188,16202,16240,16255,16278,16325,16350,16375,16381,16405,16442,16457,16465,16551,16568,16589,16621,16639,16641,16647,16650,16653,16671,16695,16744,16774,16786,16807,16815,16843,16849,16984,17011,17016,17043,17080,17161,17194,17227,17256,17290,17397,17402,17402,17435,17437,17473,17499,17517,17526,17530,17547,17567,17595,17685,17701,17701,17705,17716,17733,17813,17832,17848,17871,17886,17903,17987,18025,18036,18068,18102,18120,18145,18258,18320,18349,18368,18382,18390,18421,18444,18475,18534,18634,18663,18676,18825,18907,18925,18927,18975,19089,19097,19110,19211,19279,19318,19339,19350,19356,19398,19424,19477,19492,19578,19602,19615,19628,19636,19641,19646,19744,19803,19811,19831,19872,19880,19921,20006,20022,20043,20053,20109,20121,20189,20222,20277,20387,20392,20398,20422,20437,20494,20501,20502,20565,20565,20598,20605,20607,20655,20674,20682,20684,20841,20865,20889,20907,20924,20974,21003,21019,21047,21048,21066,21140,21167,21176,21209,21243,21298,21321,21402,21403,21415,21423,21464,21485,21520,21614,21659,21674,21714,21738,21748,21773,21788,21800,21871,21905,22008,22088,22155,22155,22257,22316,22330,22344,22364,22405,22453,22478,22536,22557,22571,22594,22690,22714,22723,22745,22796,23041,23089,23136,23156,23207,23395,23470,23481,23511,23629,23642,23653,23699,23702,23766,23772,23819,23840,23898,23919,23932,24052,24130,24150,24177,24205,24272,24275,24304,24343,24361,24372,24374,24375,24397,24401,24436,24455,24516,24531,24571,24572,24577,24595,24605,24685,24686,24737,24748,24859,24867,24879,24947,24949,24992,25069,25081,25096,25098,25139,25140,25180,25193,25205,25214,25224,25226,25238,25277,25309,25331,25334,25359,25370,25377,25377,25412,25453,25453,25457,25500,25524,25592,25597,25607,25644,25646,25665,25676,25690,25696,25768,25833,25869,25911,26062,26082,26118,26137,26147,26158,26292,26300,26323,26365,26399,26473,26515,26543,26601,26660,26756,26813,26849,26851,26855,26985,27010,27013,27036,27079,27106,27134,27181,27280,27292,27353,27367,27403,27436,27454,27520,27583,27605,27627,27708,27710,27711,27789,27841,27925,27961,27966,27988,28043,28056,28086,28158,28283,28289,28325,28350,28353,28357,28387,28393,28393,28463,28469,28530,28531,28548,28571,28618,28636,28645,28656,28681,28720,28740,28780,28817,28834,28853,28858,28860,28866,28875,28879,28879,28962,28988,28997,29006,29030,29064,29095,29129,29131,29194,29249,29257,29263,29301,29327,29396,29410,29439,29475,29488,29511,29607,29662,29666,29744,29766,29810,29851,29858,29897,29910,29928,29930,29945,29953,30026,30027,30061,30073,30143,30159,30193,30198,30218,30235,30327,30327,30337,30340,30358,30360,30548,30553,30575,30592,30605,30607,30631,30642,30652,30670,30701,30718,30791,30837,30844,30914,30953,30971,31015,31060,31119,31132,31137,31196,31209,31209,31291,31448,31485,31502,31527,31542,31554,31625,31628,31655,31674,31679,31713,31729,31745,31759,31794,31838,31850,31868,31932,31965,31981,31982,32024,32048,32056,32075,32090,32093,32145,32213,32231,32269,32301,32306,32328,32358,32419,32474,32536,32546,32567,32595,32616,32628,32628,32680,32699,32720,32721,32734,32755};
		//int B[] = {17,56,63,106,145,150,158,177,181,183,261,274,308,334,342,384,400,448,499,527,537,698,758,772,795,827,846,861,891,918,924,943,953,1070,1208,1256,1259,1260,1263,1334,1344,1368,1407,1481,1490,1550,1556,1586,1642,1654,1683,1697,1721,1751,1838,1846,1895,1896,1999,2017,2021,2075,2127,2151,2166,2213,2235,2263,2301,2321,2326,2430,2541,2583,2663,2728,2751,2753,2771,2836,2839,2850,2865,2898,2957,3006,3024,3059,3083,3084,3136,3144,3158,3178,3228,3247,3271,3299,3321,3362,3408,3423,3425,3430,3528,3583,3605,3620,3622,3675,3684,3703,3707,3729,3762,3813,3817,3829,3894,3907,3930,3933,3950,3952,4027,4027,4070,4128,4165,4189,4201,4231,4252,4342,4364,4373,4376,4377,4415,4483,4568,4574,4582,4603,4631,4665,4684,4689,4714,4804,4852,4890,4930,4931,4937,4939,4940,4944,4967,5013,5054,5056,5157,5158,5214,5241,5251,5279,5344,5351,5432,5454,5491,5502,5516,5517,5560,5577,5597,5603,5618,5647,5700,5717,5821,5829,5834,5850,5915,5979,5993,6040,6041,6084,6090,6116,6142,6183,6184,6190,6292,6295,6308,6329,6427,6639,6698,6717,6724,6768,6791,6801,6831,6894,6900,6916,7056,7072,7102,7120,7152,7191,7203,7207,7209,7224,7433,7440,7473,7484,7498,7521,7588,7593,7616,7617,7621,7648,7652,7667,7679,7680,7736,7747,7760,7847,7848,7901,7942,8045,8058,8085,8205,8207,8242,8265,8270,8308,8342,8367,8406,8427,8455,8461,8523,8524,8561,8568,8588,8649,8677,8687,8698,8726,8779,8842,8907,8945,8952,8969,8973,8977,9006,9023,9037,9074,9125,9158,9167,9226,9278,9363,9375,9397,9460,9495,9641,9758,9778,9795,9814,9836,9870,9896,9902,9913,9957,9966,9971,10046,10095,10110,10150,10173,10176,10193,10197,10223,10250,10278,10301,10304,10320,10320,10337,10421,10458,10477,10493,10517,10520,10556,10565,10578,10586,10596,10612,10654,10686,10737,10765,10787,10850,10880,10950,10976,11038,11087,11097,11184,11200,11258,11259,11306,11363,11416,11438,11450,11468,11474,11495,11507,11527,11569,11599,11611,11616,11617,11622,11625,11647,11657,11711,11747,11756,11785,11841,11844,11893,11918,12058,12081,12111,12135,12143,12198,12263,12277,12294,12358,12361,12364,12407,12416,12504,12566,12592,12694,12768,12799,12846,12849,12868,12967,13048,13117,13130,13142,13162,13233,13307,13392,13442,13467,13478,13520,13526,13539,13547,13547,13642,13660,13679,13729,13813,13824,13841,13877,13941,13948,13989,13989,14178,14251,14288,14297,14328,14402,14414,14415,14417,14432,14436,14499,14515,14523,14532,14539,14541,14546,14553,14557,14558,14602,14622,14677,14681,14704,14747,14807,14836,14839,14940,15018,15030,15036,15085,15090,15154,15154,15196,15231,15268,15438,15455,15474,15475,15496,15528,15593,15655,15665,15673,15716,15810,15848,15873,15880,15884,15919,15947,15954,15964,16029,16031,16045,16055,16110,16139,16153,16174,16199,16250,16251,16261,16312,16380,16388,16389,16390,16433,16442,16498,16508,16538,16544,16676,16739,16750,16776,16798,16802,16837,16854,16868,17014,17027,17058,17093,17194,17215,17295,17303,17314,17318,17329,17333,17343,17344,17352,17393,17428,17449,17470,17497,17562,17582,17607,17634,17635,17635,17669,17735,17764,17792,17839,17859,17934,17994,18015,18056,18068,18097,18123,18157,18157,18239,18240,18258,18283,18318,18329,18446,18458,18460,18468,18479,18513,18541,18555,18569,18647,18661,18677,18705,18719,18752,18757,18791,18818,18853,18867,18871,18910,18936,18965,18989,18993,19042,19057,19065,19066,19124,19149,19169,19234,19239,19249,19281,19315,19327,19366,19401,19405,19451,19508,19518,19520,19546,19563,19636,19653,19698,19717,19721,19744,19835,19869,19898,19901,19994,20019,20047,20053,20105,20130,20167,20248,20268,20312,20333,20378,20378,20384,20387,20485,20544,20639,20689,20689,20751,20796,20828,20869,20883,20897,20933,21126,21136,21172,21264,21320,21324,21330,21332,21358,21387,21405,21409,21435,21435,21437,21514,21586,21592,21653,21660,21663,21709,21731,21741,21743,21745,21763,21804,21847,21861,21874,21910,21939,21951,22029,22034,22058,22097,22138,22151,22178,22184,22239,22260,22284,22289,22307,22377,22433,22570,22574,22616,22640,22645,22658,22708,22709,22723,22737,22847,22946,22964,22988,23039,23078,23107,23160,23177,23186,23194,23204,23211,23230,23328,23380,23416,23458,23547,23569,23622,23623,23641,23689,23835,23855,23889,23929,23963,23996,24002,24005,24005,24015,24022,24036,24048,24119,24125,24135,24151,24289,24294,24355,24442,24603,24670,24678,24682,24689,24710,24873,24882,24928,24942,24955,24980,25004,25007,25010,25016,25176,25179,25193,25202,25204,25207,25264,25296,25323,25384,25448,25481,25495,25537,25544,25554,25557,25656,25672,25676,25682,25692,25748,25751,25794,25823,25825,25839,25882,25944,25958,25990,25994,26005,26124,26155,26173,26236,26256,26283,26283,26293,26296,26327,26387,26394,26460,26516,26659,26727,26751,26832,26885,26890,26908,26982,27081,27097,27146,27152,27153,27160,27175,27203,27212,27249,27259,27283,27295,27328,27437,27447,27458,27474,27522,27529,27600,27606,27631,27685,27701,27709,27791,27801,27806,27822,27836,27887,27955,27971,28023,28033,28041,28064,28136,28167,28186,28271,28278,28293,28352,28358,28362,28371,28409,28410,28441,28455,28518,28598,28642,28702,28804,28878,28895,28929,28963,28985,29040,29051,29116,29156,29225,29341,29475,29476,29488,29574,29652,29742,29760,29769,29887,29918,29955,29960,30025,30057,30071,30079,30166,30189,30297,30334,30348,30388,30414,30458,30538,30554,30565,30567,30570,30601,30605,30614,30623,30628,30716,30724,30750,30771,30771,30823,30850,30854,30857,30868,30878,30923,30946,31014,31100,31100,31103,31143,31150,31167,31182,31193,31196,31230,31282,31343,31420,31443,31462,31473,31489,31575,31576,31703,31726,31805,31819,31835,31855,31872,31881,31899,31938,31956,32004,32030,32045,32055,32091,32093,32097,32114,32143,32161,32181,32201,32239,32301,32339,32385,32393,32550,32564,32711,32740};
		System.out.println(findMedianSortedArrays(A, B));
	}
	
	
	public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int m = nums1.length;
		int n = nums2.length;
		if (m > n) {
			findMedianSortedArrays(nums2, nums1	);
		}
		
		int k = (n + m -1)/2;
		int l = 0, r = Math.min(m, k);
		
		while (l < r) {
			int midA = (l + r)/2;
			int midB = k - midA;
			if (nums1[midA] < nums2[midB]) {
				l = midA +1;
			} else {
				r = midA;
			}
		}
		// l-1, l, k-l, k-l+1
		int a = Math.max(l-1>=0 ? nums1[l-1]:Integer.MIN_VALUE, k-l >=0 ? nums2[k-l]:Integer.MIN_VALUE);
		if (((n + m) & 1) == 1) {
			return a;
		}
		int b = Math.min(l < m ? nums1[l]:Integer.MAX_VALUE, k-l+1 < n ? nums2[k-l+1]:Integer.MAX_VALUE);
		return (a +b)/2;
	}
	
	 public static double findMedianSortedArrays2(int[] nums1, int[] nums2) {
	        int fl = nums1.length;
	        int sl = nums2.length;
	        if (sl < fl) {
	            return findMedianSortedArrays(nums2, nums1);
	        }
	        
	        int k = (fl + sl -1)/2;
	        int left = 0;
	        int right = Math.min(k,fl);
	        while (left < right) {
	            int midA = (left + right)/2;
	            int midB = k - midA;
	            if (nums1[midA] < nums2[midB]) {
	                left = midA + 1;
	            } else {
	                right = midA;
	            }
	        }
	        
	        int a = Math.max(left > 0 ? nums1[left-1]:Integer.MIN_VALUE, k-left >= 0 ? nums2[k-left]:Integer.MIN_VALUE);
	        if (((fl+sl) & 1) == 1) {
	            return a;
	        }
	        int b = Math.min(left < fl ? nums1[left]:Integer.MAX_VALUE, (k-left+1) < sl?nums2[k-left+1]:Integer.MAX_VALUE);
	        return (a+b)/2;
	    }
}
